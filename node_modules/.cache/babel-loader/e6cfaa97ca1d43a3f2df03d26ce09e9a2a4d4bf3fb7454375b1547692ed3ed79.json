{"ast":null,"code":"var _jsxFileName = \"/Users/vedantyelsangikar/Documents/Git-Projects/VectoRent/src/components/Elements.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport c from '../images/needacar.png';\nimport rts from '../images/needacourt.png';\nimport it from '../images/needanitem.png';\nimport rent from '../images/renthouse.png';\n\n/*Elements function to initialize the items from Elements.data file where the props approach is used to map each\nelements accordingly, the way they are initialized/written here similarly displayed on the screen, ex: the <hr> tag*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Elements(props) {\n  _s();\n  const [prost, setProst] = React.useState({\n    isFav: false\n  });\n  function Houses() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Houses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  }\n  let type = `${props.items.type}`;\n  function toggleImge() {\n    /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/houses\",\n          element: /*#__PURE__*/_jsxDEV(Houses, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n    setProst(function (d) {\n      return {\n        isFav: !d.isFav\n      };\n    });\n  }\n  let icon; //Icon variable will hold the value of default at first, it checks the type then change\n  switch (type) {\n    case \"Vehicles\":\n      icon = prost.isFav ? `${c}` : `${props.items.img}`;\n      break;\n    case \"Courts\":\n      icon = prost.isFav ? `${rts}` : `${props.items.img}`;\n      break;\n    case \"Others\":\n      icon = prost.isFav ? `${it}` : `${props.items.img}`;\n      break;\n    case \"House\":\n      icon = prost.isFav ? `${rent}` : `${props.items.img}`;\n      break;\n    default:\n      icon = `${props.items.img}`;\n  }\n\n  // let icon = type === \"Vehicles\" && prost.isFav?`${c}` : `${props.items.img}` \n  return props.id && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-div \",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/houses\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleImge,\n        className: \"cards-each\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.items.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.items.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.items.saledeadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Elements, \"lqxPbPkdMZPCVdb4agAGAH5lqj8=\");\n_c = Elements;\nvar _c;\n$RefreshReg$(_c, \"Elements\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Link","c","rts","it","rent","jsxDEV","_jsxDEV","Elements","props","_s","prost","setProst","useState","isFav","Houses","children","fileName","_jsxFileName","lineNumber","columnNumber","type","items","toggleImge","path","element","d","icon","img","id","className","to","onClick","src","alt","city","saledeadline","_c","$RefreshReg$"],"sources":["/Users/vedantyelsangikar/Documents/Git-Projects/VectoRent/src/components/Elements.js"],"sourcesContent":["import React from 'react'\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom'\nimport c from '../images/needacar.png'\nimport rts from '../images/needacourt.png'\nimport it from '../images/needanitem.png'\nimport rent from '../images/renthouse.png'\n\n\n/*Elements function to initialize the items from Elements.data file where the props approach is used to map each\nelements accordingly, the way they are initialized/written here similarly displayed on the screen, ex: the <hr> tag*/ \n\nexport default function Elements(props) {\n\n    const [prost, setProst] = React.useState({\n        isFav:false\n    })\n\n\n    function Houses(){\n      return <h1>Houses</h1>\n    }\n\n    let type = `${props.items.type}`\n    function toggleImge(){\n      <BrowserRouter>\n        <Routes>\n           <Route path='/houses' element={<Houses/>}/>\n        </Routes>\n      </BrowserRouter>\n        setProst(function(d){\n            return{\n                isFav:!d.isFav\n            }\n        })\n    }\n    \n    let icon;           //Icon variable will hold the value of default at first, it checks the type then change\n    switch (type) {\n        case \"Vehicles\":\n          icon = prost.isFav ? `${c}` : `${props.items.img}`;\n          break;\n        case \"Courts\":\n          icon = prost.isFav ? `${rts}` : `${props.items.img}`;\n          break;\n        case \"Others\":\n          icon = prost.isFav ? `${it}` : `${props.items.img}`;\n          break;\n        case \"House\":\n          icon = prost.isFav ? `${rent}` : `${props.items.img}`;\n          break;\n        default:\n          icon = `${props.items.img}`;\n      }\n    \n    // let icon = type === \"Vehicles\" && prost.isFav?`${c}` : `${props.items.img}` \n    return ( props.id &&\n        <div className='card-div '>\n            <Link to ='/houses'>\n              <div onClick={toggleImge} className='cards-each'>\n                <img src={icon} alt=\"img\"/>\n                <h3>{props.items.type}</h3>\n                <p>{props.items.city}</p>\n                <hr/>\n                <span>\n                    <p>{props.items.saledeadline}</p>\n                </span>\n            </div>\n            </Link>\n        </div>\n        \n    )\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}