{"ast":null,"code":"var _jsxFileName = \"/Users/vedantyelsangikar/Documents/Git-Projects/VectoRent/src/Elements.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport c from './images/needacar.png';\nimport rts from './images/needacourt.png';\nimport it from './images/needanitem.png';\nimport rent from './images/renthouse.png';\n\n/*Elements function to initialize the items from Elements.data file where the props approach is used to map each\nelements accordingly, the way they are initialized/written here similarly displayed on the screen, ex: the <hr> tag*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Elements(props) {\n  _s();\n  const [prost, setProst] = React.useState({\n    isFav: false\n  });\n  let type = `${props.items.type}`;\n  function toggleImge() {\n    setProst(function (d) {\n      return {\n        isFav: !d.isFav\n      };\n    });\n  }\n  let icon; //Icon variable will hold the value of default at first, it checks the type then change\n  switch (type) {\n    case \"Vehicles\":\n      icon = prost.isFav ? `${c}` : `${props.items.img}`;\n      break;\n    case \"Courts\":\n      icon = prost.isFav ? `${rts}` : `${props.items.img}`;\n      break;\n    case \"Others\":\n      icon = prost.isFav ? `${it}` : `${props.items.img}`;\n      break;\n    case \"House\":\n      icon = prost.isFav ? `${rent}` : `${props.items.img}`;\n      break;\n    default:\n      icon = `${props.items.img}`;\n  }\n\n  // let icon = type === \"Vehicles\" && prost.isFav?`${c}` : `${props.items.img}` \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-div \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleImge,\n      className: \"cards-each\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.items.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.items.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.items.saledeadline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), props.items.cost && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.items.cost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Elements, \"lqxPbPkdMZPCVdb4agAGAH5lqj8=\");\n_c = Elements;\nvar _c;\n$RefreshReg$(_c, \"Elements\");","map":{"version":3,"names":["React","c","rts","it","rent","jsxDEV","_jsxDEV","Elements","props","_s","prost","setProst","useState","isFav","type","items","toggleImge","d","icon","img","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","city","saledeadline","cost","_c","$RefreshReg$"],"sources":["/Users/vedantyelsangikar/Documents/Git-Projects/VectoRent/src/Elements.js"],"sourcesContent":["import React from 'react'\nimport c from './images/needacar.png'\nimport rts from './images/needacourt.png'\nimport it from './images/needanitem.png'\nimport rent from './images/renthouse.png'\n\n\n/*Elements function to initialize the items from Elements.data file where the props approach is used to map each\nelements accordingly, the way they are initialized/written here similarly displayed on the screen, ex: the <hr> tag*/ \n\nexport default function Elements(props) {\n\n    const [prost, setProst] = React.useState({\n        isFav:false\n    })\n\n    let type = `${props.items.type}`\n    function toggleImge(){\n        setProst(function(d){\n            return{\n                isFav:!d.isFav\n            }\n        })\n    }\n    \n    let icon;           //Icon variable will hold the value of default at first, it checks the type then change\n    switch (type) {\n        case \"Vehicles\":\n          icon = prost.isFav ? `${c}` : `${props.items.img}`;\n          break;\n        case \"Courts\":\n          icon = prost.isFav ? `${rts}` : `${props.items.img}`;\n          break;\n        case \"Others\":\n          icon = prost.isFav ? `${it}` : `${props.items.img}`;\n          break;\n        case \"House\":\n          icon = prost.isFav ? `${rent}` : `${props.items.img}`;\n          break;\n        default:\n          icon = `${props.items.img}`;\n      }\n    \n    // let icon = type === \"Vehicles\" && prost.isFav?`${c}` : `${props.items.img}` \n    return (\n        <div className='card-div '>\n            <div onClick={toggleImge} className='cards-each'>\n                \n                <img src={icon} alt=\"img\"/>\n                <h3>{props.items.type}</h3>\n                <p>{props.items.city}</p>\n                <hr/>\n                <span>\n                    <p>{props.items.saledeadline}</p>\n                    {props.items.cost && <p>{props.items.cost}</p>}\n                </span>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}